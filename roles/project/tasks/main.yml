- name: PROJECT -->Create path project 
  become: yes
  file:
   path: "/usr/local/rails_app"
   state: directory
   owner: "{{ deploy_user }}"
   group: "{{ deploy_user }}"

- name: PROJECT -->  Create project {{ project_name }}
  become_user: "{{ deploy_user }}"
  become: yes
  shell: bash -lc " rails new {{ project_name }} "
  args:
    chdir: /usr/local/rails_app
    creates: "{{  path_project }}"

- name: PROJECT -->  Create directory sockets
  become: yes
  file:
   path: "{{ path_project }}/tmp/sockets"
   state: directory
   owner: "{{ deploy_user }}" 
   group: "{{ deploy_user }}"

# on project :
- name: PROJECT --> include file index.html to {{project_name}}/public
  become_user: "{{ deploy_user}}"
  become: yes
  template:
    src: index.html
    dest: "{{ path_project }}/public/index.html"
  
# on project : change evironment of puma.rb to production
- name: PUMA --> change evironment of puma.rb from development to production
  become_user: "{{ deploy_user}}"
  become: yes
  replace:
    path: "{{ path_project }}/config/puma.rb"
    regexp: 'development'
    replace: 'production'
# on nginx 
- name: NGINX --> Disable the default site
  become: yes
  file:
    path: "{{nginx_conf_dir}}/sites-enabled/default"
    state: absent

- name: NGINX --> Remove the default configuration
  become: yes
  file:
    path: "{{nginx_conf_dir}}/conf.d/default.conf"
    state: absent

- name: NGINX --> Copy the nginx configuration file
  become: yes
  template:
    src: blog_nginx.conf.j2
    dest: "{{nginx_conf_dir}}/sites-available/{{ project_name }}_config.conf"

- name: NGINX --> Create symbolic link 
  become: yes
  file:
    src: "{{nginx_conf_dir}}/sites-available/{{ project_name }}_config.conf"
    dest: "{{ nginx_conf_dir }}/sites-enabled/{{ project_name }}"
    state: link
- name: Restart  nginx
  become: yes
  service:
    name: nginx
    state: restarted
  register: status_nginx_project 
- debug:
    var: status_nginx_project.status


- name: Restart puma
  become: yes
  service:
    name: puma
    state: restarted
  register: status_puma
- debug:
    var: status_puma.status


- name : PROJECT --> Run project {{ project_name }}
  become_user: "{{ deploy_user }}"
  become: yes
  shell: bash -lc  "bundle exec puma -e production -b unix:{{ server_unix }} -d"
  args:
    chdir:  "{{  path_project }}"
